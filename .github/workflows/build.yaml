name: Unit_Test_And_Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-program:
    runs-on: ubuntu-latest

    env:
      ARM64_DIR: target/linux/arm64
      AMD64_DIR: target/linux/amd64
      EXECUTABLE_NAME: data_builder

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev

      - name: Set OpenSSL environment variable
        run: echo "OPENSSL_DIR=/usr" >> $GITHUB_ENV

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install cross for cross-compilation
        run: |
          cargo install cross

      - name: Build for ARM64 (aarch64-unknown-linux-musl)
        run: |
          mkdir -p $ARM64_DIR
          cross build --target aarch64-unknown-linux-musl --release
          cp target/aarch64-unknown-linux-musl/release/$EXECUTABLE_NAME $ARM64_DIR/

      - name: Build for AMD64 (x86_64-unknown-linux-musl)
        run: |
          mkdir -p $AMD64_DIR
          cross build --target x86_64-unknown-linux-musl --release
          cp target/x86_64-unknown-linux-musl/release/$EXECUTABLE_NAME $AMD64_DIR/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            target/linux/arm64/
            target/linux/amd64/

      - name: List files
        run: |
          echo "List files in target directory:"
          ls -R target/

  build-docker-images:
    runs-on: ubuntu-latest
    needs: [build-program]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v4
        with:
          path: build/
      - name: Display structure of downloaded files
        run: ls -R build/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker image (main-dev)
        env:
          DOCKER_BUILDKIT: 1
        run: |
          docker buildx create --use
          docker buildx build --file ./docker/Dockerfile --platform linux/arm64,linux/amd64 --tag bedinotom/data_builder:${{ github.run_number }} --push .
          docker pull bedinotom/data_builder:${{ github.run_number }}

      - name: Upload Docker images as OCI artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docker-images
          path: build/

  retag-publish-images:
    runs-on: ubuntu-latest
    needs: build-docker-images

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Pull Docker images
        run: |
          docker pull bedinotom/data_builder:main-dev

      - name: Retag images
        run: |
          docker tag bedinotom/data_builder:${{ github.run_number }} bedinotom/data_builder:latest

      - name: Push retagged images
        run: |
          docker push bedinotom/data_builder:latest
